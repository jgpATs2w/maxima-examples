load(interpol)$
p:[[7,2],[8,2],[1,5],[3,2],[6,7]]$
/* Unknown first derivatives at the extremes
         is equivalent to natural cubic splines */
cspline(p);

f(x):=''%$
/* Some evaluations */
map(f,[2.3,5/7,%pi]), numer;

load(draw)$  /* load draw package */
/* Plotting interpolating function */
      draw2d(
        color      = red,
        key        = "Cubic splines",
        explicit(f(x),x,0,10),
        point_size = 3,
        color      = blue,
        key        = "Sample points",
        points(p))$
/* New call, but giving values at the derivatives */
      cspline(p,d1=0,dn=0);


p: matrix([7,2],[8,3],[1,5],[3,2],[6,7])$
linearinterpol(p);

linearinterpol([[1,1],[2,2],[4,3]]);

load (lsquares)$
M : matrix (
        [1,1,1], [3/2,1,2], [9/4,2,1], [3,2,2], [2,2,1]);

lsquares_estimates (
         M, [z,x,y], (z+D)^2 = A*x+B*y+C, [A,B,C,D]);

 M : matrix ([1, 1], [2, 7/4], [3, 11/4], [4, 13/4]);
lsquares_estimates ( M, [x,y], y=a*x^b+c, [a,b,c], initial=[3,3,3], iprint=[-1,0]);
